package usecase

import (
    "github.com/jmoiron/sqlx"
)

type {{.TableNameCamel}}UC struct {
    repo interfaces.{{.TableNameCamel}}DB
}

func (uc *{{.TableNameCamel}}UC) Get{{.TableNameCamel}}List (req entities.Get{{.TableNameCamel}}ListRequest) (res []entities.Get{{.TableNameCamel}}ListResponse, err error) {
    return uc.repo.Get{{.TableNameCamel}}List(req)
}

func (uc *{{.TableNameCamel}}UC) Get{{.TableNameCamel}}By{{.PrimaryKey.CamelName}} (req entities.Get{{.TableNameCamel}}By{{.PrimaryKey.CamelName}}Request) (res []entities.Get{{.TableNameCamel}}By{{.PrimaryKey.CamelName}}Response, err error) {
    return uc.repo.Get{{.TableNameCamel}}By{{.PrimaryKey.CamelName}}(req)
}

func (uc *{{.TableNameCamel}}UC) Create{{.TableNameCamel}} (req entities.Create{{.TableNameCamel}}Request) (res []entities.Create{{.TableNameCamel}}Response, err error) {
    return uc.repo.Create{{.TableNameCamel}}(req)
}

func (uc *{{.TableNameCamel}}UC) Update{{.TableNameCamel}} (req entities.Update{{.TableNameCamel}}Request) (res []entities.Update{{.TableNameCamel}}Response, err error) {
    return uc.repo.Update{{.TableNameCamel}}(req)
}

func (uc *{{.TableNameCamel}}UC) Delete{{.TableNameCamel}} (req entities.Delete{{.TableNameCamel}}Request) (res []entities.Delete{{.TableNameCamel}}Response, err error) {
    return uc.repo.Delete{{.TableNameCamel}}(req)
}
