package usecase

import (
    "github.com/jmoiron/sqlx"
)

type {{.TableNameCamel}}UC struct {
    repo internal.{{.TableNameCamel}}DB
}

func (r *{{.TableNameCamel}}UC) Get{{.TableNameCamel}}List (req entities.Get{{.TableNameCamel}}ListRequest) (res []entities.Get{{.TableNameCamel}}ListResponse, err error) {
    return Get{{.TableNameCamel}}List
}

func (r *{{.TableNameCamel}}UC) Get{{.TableNameCamel}}By{{.PrimaryKey.CamelName}} (req entities.Get{{.TableNameCamel}}Request) (res []entities.Get{{.TableNameCamel}}By{{.PrimaryKey.CamelName}}Response, err error) {
    return Get{{.TableNameCamel}}By{{.PrimaryKey.CamelName}}
}

func (r *{{.TableNameCamel}}UC) Create{{.TableNameCamel}} (req entities.Create{{.TableNameCamel}}Request) (res []entities.Create{{.TableNameCamel}}Response, err error) {
    return Create{{.TableNameCamel}}
}

func (r *{{.TableNameCamel}}UC) Update{{.TableNameCamel}} (req entities.Update{{.TableNameCamel}}Request) (res []entities.Update{{.TableNameCamel}}Response, err error) {
    return Update{{.TableNameCamel}}
}

func (r *{{.TableNameCamel}}UC) Delete{{.TableNameCamel}} (req entities.Delete{{.TableNameCamel}}Request) (res []entities.Delete{{.TableNameCamel}}Response, err error) {
    return Delete{{.TableNameCamel}}
}